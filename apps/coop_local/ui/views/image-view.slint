// SPDX-FileCopyrightText: 2023 Florian Blasius <co_sl@tutanota.com>
// SPDX-License-Identifier: GPL-3.0-only

import { ScrollView, RoundButton, ContextMenu, LoadingIndicator, RoundButton } from "@coop/widgets.slint";
import { FocusBorder } from "@coop/components.slint";
import { Space, Palette, Radius, Icons } from "@coop/styling.slint";
import { HeaderBar, ControlBar } from "@coop/building-blocks.slint";
import { ListViewItem } from "@coop/structs.slint";

export global ImageAdapter {
    in property <image> image;
    in property <string> title;
    in property <bool> loading;
    in property <bool> single-image;

    callback back();
    callback get-context-menu() -> [ListViewItem];
    callback context-menu-action(/* spec */ string);
    callback previous();
    callback next();
}

export component ImageView {
    in property <length> header-offest;

    private property <float> display-loading;
    private property <bool> image-loaded: ImageAdapter.image.width > 0 && ImageAdapter.image.height > 0;

    states [
        loading when ImageAdapter.loading : {
            display-loading: 1.0;

            in {
                animate display-loading { duration: 500ms; }
            }
        }
    ]

    VerticalLayout {
        i-header-bar := HeaderBar {
            action => {
                ImageAdapter.back();
            }

            action-icon: Icons.arrow-back;
            action-enabled: true;
            title: ImageAdapter.title;
            offset: root.header-offest;

            i-context-menu := ContextMenu {
                item-clicked(row) => {
                    ImageAdapter.context-menu-action(self.model[row].spec);
                }

                min-menu-width: 94px;
                offset-x: -((self.x + self.min-menu-width) - (i-menu-button.x + i-menu-button.width));
                offset-y: i-menu-button.height;
            }

            i-menu-button := RoundButton {
                clicked => {
                    i-context-menu.model = ImageAdapter.get-context-menu();

                    if (i-context-menu.model.length == 0) {
                        return;
                    }

                    i-context-menu.show();
                }

                icon: Icons.more-vert;
                horizontal-stretch: 0;
            }
        }

        Rectangle {
            vertical-stretch: 1;

            i-focus-scope := FocusScope {
                key-pressed(event) => {
                    if (event.text == Key.RightArrow) {
                        ImageAdapter.next();
                        return accept;
                    }

                    if (event.text == Key.LeftArrow) {
                        ImageAdapter.previous();
                        return accept;
                    }

                    reject
                }

                enabled: !ImageAdapter.single-image;
            }

            VerticalLayout {
                alignment: start;
                padding: Space.large;
                vertical-stretch: 1;

                if (root.image-loaded) : Rectangle {
                    clip: true;
                    border-radius: Radius.medium;

                    VerticalLayout {
                        padding: Space.small;

                        i-image := Image {
                            source: ImageAdapter.image;
                        }
                    }

                    if (i-focus-scope.has-focus) : FocusBorder {
                        width: 100%;
                        height: 100%;
                        border-radius: parent.border-radius;
                    }
                }
            }
        }

        if (!root.image-loaded) : Rectangle {
            vertical-stretch: 1;
        }

        if (!ImageAdapter.single-image) : ControlBar {
            RoundButton {
                clicked => {
                    ImageAdapter.previous();
                }

                icon: Icons.arrow-back;
            }

            RoundButton {
                clicked => {
                    ImageAdapter.next();
                }

                icon: Icons.arrow-forward;
            }
        }
    }

    if (root.display-loading >= 1.0) : LoadingIndicator {
        width: 100%;
        height: 100%;
    }
}