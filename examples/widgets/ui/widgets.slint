import { CoWindow, OutlineButton, Button, IconButton, TextLine, KeyboardPage, co, mi } from "../_slint_includes/co_widgets.slint";

export Widgets := CoWindow {
    width: 600px;
    height: 400px;
    title: "Widgets gallery";

    property<bool> default_primary: true;
    property<brush> current_primary <=> co.accent_color;
    property<brush> current_on_primary <=> co.on_accent_color;
    property<bool> widgets_enabled: true;

    callback update_theme();

    update-theme => {  
        if(default_primary) {
            current_primary = co.dark_theme ? #01fec5 : #1d9bf2;
            current_on_primary = co.dark_theme ? #212121 : #dfdfdf;
        } else {
            current_primary = co.dark_theme ? #6750A4 : #D0BCFF;
            current_on_primary = #212121;
        }
    }

    keyboard_page := KeyboardPage {  
        background: root.background;

        GridLayout {  
            padding: co.spaces.medium;
            spacing: co.spaces.large;
    
            VerticalLayout {  
                spacing: co.spaces.medium;
        
                OutlineButton {
                    enabled: widgets_enabled;
                    text: "light / dark";
                    clicked => { 
                        co.dark_theme = !co.dark_theme; 
                        update_theme();
                    }
                }
        
                OutlineButton {
                    enabled: widgets_enabled;
                    text: "Change primary";
                    clicked => {  
                        root.default_primary = !root.default_primary;
                        update_theme();
                    }
                }
        
                Button {
                    text: widgets_enabled ? "Disable widgets" : "Enable widgets";
                    clicked => { widgets_enabled = !widgets_enabled; }
                }
        
                Button {
                    enabled: widgets_enabled;
                    text: "Icon";
                    icon: mi.settings;
                 
                }
        
                Button {
                    enabled: widgets_enabled;
                    text: "Primary";
                    primary: true;
                    clicked => { debug("Primary clicked") }
                }
        
                IconButton {
                    icon: mi.add;
                }
            }
    
            VerticalLayout {  
                spacing: co.spaces.medium;
                TextLine {
                    has_clear: true;
                    enabled: widgets_enabled;
                    icon: mi.search;
                    placeholder: "Insert some text";
                    keyboard_open: true;

                    clicked => { keyboard_page.keyboard_open = true; }
                }
            }
        }
    }
}  

