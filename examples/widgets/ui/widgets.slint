import { CoWindow, OutlineButton, Button, RoundButton, RoundOutlineButton,
    TextLine, KeyboardPage, LabelLarge, KeyboardAdapter, Keyboard, co, mi } from "_imports/co_widgets.slint";

import { BasicsPage } from "pages/basics_page.slint";
import { KeyboardManager } from "pages/page.slint";

export { KeyboardAdapter, co }

export global settings := {
    property<bool> keyboard_enabled: false;
}

Content := Rectangle {
    callback update_theme;
    callback open_keyboard;


    property<bool> widgets_enabled: true;
    property<bool> default_primary: true;
    property<bool> keyboard_open: false;

    GridLayout {  
        padding: co.spaces.medium;
        spacing: co.spaces.large;

        VerticalLayout {  
            spacing: co.spaces.medium;
    
            OutlineButton {
                enabled: widgets_enabled;
                text: co.dark-theme ? "light" : "dark";
                icon: co.dark-theme ? mi.lightbulb : mi.nights_stay;
                clicked => { 
                    co.dark_theme = !co.dark_theme; 
                    update_theme();
                }
            }
    
            OutlineButton {
                enabled: widgets_enabled;
                text: "Change primary";
                clicked => {  
                    root.default_primary = !root.default_primary;
                    update_theme();
                }
            }
    
            Button {
                text: widgets_enabled ? "Disable widgets" : "Enable widgets";
                clicked => { widgets_enabled = !widgets_enabled; }
            }
    
            Button {
                enabled: widgets_enabled;
                text: "Icon";
                icon: mi.settings;
             
            }
    
            Button {
                enabled: widgets_enabled;
                text: "Primary";
                primary: true;
                clicked => { debug("Primary clicked") }
            }
        }

        VerticalLayout {  
            spacing: co.spaces.medium;
            
            TextLine {
                has_clear: true;
                enabled: widgets_enabled;
                icon: mi.search;
                placeholder: "Insert some text";
                clickable: settings.keyboard_enabled;

                clicked => { root.open_keyboard(); }
            }

            RoundButton {
                enabled: widgets_enabled;
                icon: mi.add;
                clicked => { debug_label.text = "RoundButton clicked" }
            }

            RoundOutlineButton {  
                enabled: widgets_enabled;
                text: "A";
                clicked => { debug_label.text = "RoundOutlineButton clicked" }
            }

            RoundOutlineButton { 
                primary: true; 
                enabled: widgets_enabled;
                icon: mi.access_alarm;
                clicked => { debug_label.text = "RoundOutlineButton clicked" }
            }

            debug_label := LabelLarge {  
                text: "Debug label";
            }
        }
    }
}

Content := HorizontalLayout {
    Rectangle {  
        width: 200px;
        background: co.dark-theme ? co.brushes.background.brighter(0.2) : co.brushes.background.darker(0.2);
    }

    BasicsPage {  

    }
}



export Widgets := CoWindow {
    preferred-width: 600px;
    preferred-height: 400px;
    title: "Widgets gallery";

    Content {}
  
    // if(!co.settings.minimize && settings.keyboard_enabled) : KeyboardPage {
    //     keyboard_open <=> KeyboardManager.keyboard_open;
    //     Content {}
    // }

    // if((co.settings.minimize || !settings.keyboard_enabled) && !KeyboardManager.keyboard_open) : Content {}
   
    // if(co.settings.minimize && settings.keyboard_enabled && KeyboardManager.keyboard_open) : Keyboard {
    //     close => { KeyboardManager.keyboard_open = false; }
    // }

//     update-theme => {  
//         if(default_primary) {
//             current_primary = co.dark_theme ? #01fec5 : #1d9bf2;
//             current_on_primary = co.dark_theme ? #212121 : #dfdfdf;
//         } else {
//             current_primary = co.dark_theme ? #6750A4 : #D0BCFF;
//             current_on_primary = #212121;
//         }
//     }
}  

