// SPDX-FileCopyrightText: 2022 Florian Blasius <co-sl@tutanota.com>
// SPDX-License-Identifier: MIT



import { HeaderBarButton, HeaderBar } from "header-bar.slint";
import { WindowModel, DisplayView, DisplayViewAdapter } from "display/display.slint";
import { Launcher } from "launcher.slint";
import { PopupBorder, SmallLabel, RoundButton, Icons, Space, Duration } from "@coop/lib.slint";
import { Login } from "login.slint";

export { WindowModel, DisplayViewAdapter }

export component Desktop inherits Window {
    private property <bool> logged-in;

    title: "desktop example";
    width: 1020px;
    height: 720px;

    if(!root.logged-in) : Login {
        login(user, password) => {
            // root.logged-in = user == "user" && password == "password";
            root.logged-in
        }
    }

    if(root.logged-in) : Rectangle {
        VerticalLayout {
            i-header-bar := HeaderBar {
                HeaderBarButton {
                    y: (parent.height - self.height) / 2;
                    icon: Icons.arrow-drop-down;

                    clicked => { i-menu.open = true; }
                }
               }

            i-wm := DisplayView {

            }

            Launcher {
                front-path: DisplayViewAdapter.front-path;
                open(path) => {
                    i-wm.open(path);
                }
                vertical-stretch: 0;

                entries: [
                    {
                        path: "target/debug/widgets",
                        // text: mi.dashboard,
                    }
                ];
            }
        }

        TouchArea {
            visible: i-menu.open;
            pointer-event(e) => {
                if(self.mouse-x >= i-menu.x && self.mouse-x <= i-menu.x + i-menu.width && self.mouse-y >= i-menu.y && self.mouse-y <= i-menu.y + i-menu.height) {
                    return;
                }
                if (e.kind == PointerEventKind.down) {
                    i-menu.open = false;
                }
            }

            i-menu := VerticalLayout {
                property <bool> open;

                states [
                    open when i-menu.open : {
                        opacity: 1.0;
                    }
                ]

                animate opacity { duration: Duration.fast; }

                alignment: start;
                x: root.width - self.width - Space.small;
                y: i-header-bar.height + Space.small;
                width: 200px;
                opacity: 0.0;

                PopupBorder {
                    TouchArea {

                    }
                    layout := GridLayout {
                        padding: Space.medium;
                        spacing: Space.medium;
                        // Row {
                        //     SmallLabel {
                        //         vertical-alignment: center;
                        //         text: "Window tilling";
                        //     }

                        //     Switch {
                        //         selected-changed(selected) => {
                        //            i-window-manager.window-tilling = selected;
                        //         }
                        //     }
                        // }

                        Row {
                            SmallLabel {
                                vertical-alignment: center;
                                text: "Logout";
                            }

                            i-logout-button := RoundButton {
                                // icon: Icons;

                                clicked => {
                                    root.logged-in = false;
                                    i-menu.open = false;
                                }
                            }
                        }
                    }
                }


            }
        }
     }
}
