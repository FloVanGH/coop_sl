# SPDX-FileCopyrightText: 2022 Florian Blasius <co_sl@tutanota.com>
# SPDX-License-Identifier: MIT

pipeline:
  deploy_docs_coop_widgets:
    group: docs
    image: rust
    when:
      event: [push]
      branch: main
    secrets: [ mail, codeberg_token ]
    environment:
      - OUTPUT=target/doc
    commands:
      - apt-get update && apt-get install -y cmake
    
      # slint_orbclient doc
      - cargo doc --no-deps -p coop_widgets
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b main https://$CODEBERG_TOKEN@codeberg.org/flovansl/pages.git /tmp/pages/
      # Copy build step output to repository folder
      - cp -ar $OUTPUT/* /tmp/pages/coop_sl/snapshots/docs/
    
      # Commit and push all static files with pipeline started timestamp
      - cd /tmp/pages/
      - git add .
      - |-
        CHANGES=$(git status --porcelain | wc -l)

        if [ "$CHANGES" -gt "0" ]; then
          git pull
          git status
          git commit -m "Woodpecker CI ${CI_BUILD_CREATED} [CI SKIP]"
          git push
        fi
    
  deploy_docs_slint_orbclient:
    group: docs
    image: rust
    when:
      event: [push]
      branch: main
    secrets: [ mail, codeberg_token ]
    environment:
      - OUTPUT=target/doc
    commands:
      - apt-get update && apt-get install -y cmake
      # slint_orbclient doc
      - cargo doc --no-deps -p slint_orbclient
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b main https://$CODEBERG_TOKEN@codeberg.org/flovansl/pages.git /tmp/pages/
      # Copy build step output to repository folder
      - cp -ar $OUTPUT/* /tmp/pages/coop_sl/snapshots/docs/
    
      # Commit and push all static files with pipeline started timestamp
      - cd /tmp/pages/
      - git add .
      - |-
        CHANGES=$(git status --porcelain | wc -l)

        if [ "$CHANGES" -gt "0" ]; then
          git pull
          git status
          git commit -m "Woodpecker CI ${CI_BUILD_CREATED} [CI SKIP]"
          git push
        fi
  deploy_docs_coop_client:
    group: docs
    image: rust
    when:
      event: [push]
      branch: main
    secrets: [ mail, codeberg_token ]
    environment:
      - OUTPUT=target/doc
    commands:
      - apt-get update && apt-get install -y cmake
      # coop_client doc
      - cargo doc --no-deps -p coop_client
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b main https://$CODEBERG_TOKEN@codeberg.org/flovansl/pages.git /tmp/pages/
      # Copy build step output to repository folder
      - cp -ar $OUTPUT/* /tmp/pages/coop_sl/snapshots/docs/
    
      # Commit and push all static files with pipeline started timestamp
      - cd /tmp/pages/
      - git add .
      - |-
        CHANGES=$(git status --porcelain | wc -l)

        if [ "$CHANGES" -gt "0" ]; then
          git pull
          git status
          git commit -m "Woodpecker CI ${CI_BUILD_CREATED} [CI SKIP]"
          git push
        fi
  deploy_docs_coop_protocol:
    group: docs
    image: rust
    when:
      event: [push]
      branch: main
    secrets: [ mail, codeberg_token ]
    environment:
      - OUTPUT=target/doc
    commands:
      - apt-get update && apt-get install -y cmake
      # coop_protocol doc
      - cargo doc --no-deps -p coop_protocol
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b main https://$CODEBERG_TOKEN@codeberg.org/flovansl/pages.git /tmp/pages/
      # Copy build step output to repository folder
      - cp -ar $OUTPUT/* /tmp/pages/coop_sl/snapshots/docs/
    
      # Commit and push all static files with pipeline started timestamp
      - cd /tmp/pages/
      - git add .
      - |-
        CHANGES=$(git status --porcelain | wc -l)

        if [ "$CHANGES" -gt "0" ]; then
          git pull
          git status
          git commit -m "Woodpecker CI ${CI_BUILD_CREATED} [CI SKIP]"
          git push
        fi
  deploy_docs_coop_server:
    group: docs
    image: rust
    when:
      event: [push]
      branch: main
    secrets: [ mail, codeberg_token ]
    environment:
      - OUTPUT=target/doc
    commands:
      - apt-get update && apt-get install -y cmake
      # coop_protocol doc
      - cargo doc --no-deps -p coop_server
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b main https://$CODEBERG_TOKEN@codeberg.org/flovansl/pages.git /tmp/pages/
      # Copy build step output to repository folder
      - cp -ar $OUTPUT/* /tmp/pages/coop_sl/snapshots/docs/
    
      # Commit and push all static files with pipeline started timestamp
      - cd /tmp/pages/
      - git add .
      - |-
        CHANGES=$(git status --porcelain | wc -l)

        if [ "$CHANGES" -gt "0" ]; then
          git pull
          git status
          git commit -m "Woodpecker CI ${CI_BUILD_CREATED} [CI SKIP]"
          git push
        fi
  deploy_docs_slint_coop:
    group: docs
    image: rust
    when:
      event: [push]
      branch: main
    secrets: [ mail, codeberg_token ]
    environment:
      - OUTPUT=target/doc
    commands:
      - apt-get update && apt-get install -y cmake
      # slint_coop doc
      - cargo doc --no-deps -p slint_coop
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b main https://$CODEBERG_TOKEN@codeberg.org/flovansl/pages.git /tmp/pages/
      # Copy build step output to repository folder
      - cp -ar $OUTPUT/* /tmp/pages/coop_sl/snapshots/docs/
    
      # Commit and push all static files with pipeline started timestamp
      - cd /tmp/pages/
      - git add .
      - |-
        CHANGES=$(git status --porcelain | wc -l)

        if [ "$CHANGES" -gt "0" ]; then
          git pull
          git status
          git commit -m "Woodpecker CI ${CI_BUILD_CREATED} [CI SKIP]"
          git push
        fi