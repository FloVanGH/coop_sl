pipeline:
  lint:
    image: rust
    when:
      event: [push, pull_request, tag]
      branch: main
    commands:
      # need for slint_orbclient build for linux
      - apt-get update && apt-get install -y cmake
      - rustup component add rustfmt
      - cargo fmt --all -- --check
      - rustup component add clippy
      - cargo clippy --all-targets -- -D warnings
  build_and_test:
    image: rust
    when:
      event: [push, pull_request, tag]
      branch: main
    commands:
      - cargo build
      - cargo test
  build_redox:
    image: rust
    commands:
      - apt-get update && apt-get install -y -qq build-essential curl fuse libfuse-dev pkg-config qemu-system-x86
      - rustup default nightly
      - cargo install redoxer
      - redoxer toolchain
      - export PKG_CONFIG_SYSROOT_DIR=~/.redoxer/toolchain/bin/x86_64-unkown-redox-gcc
      - redoxer build -p widgets --no-default-features --features slint_orbclient
  build_wasm:
    image: rust
    when:
      event: [pull_request, tag]
      branch: main
    commands:
      - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - cd examples/widgets
      - sed -i "s/#wasm# //" Cargo.toml
      - wasm-pack build --release --target web
  deploy_docs:
    image: rust
    when:
      event: [push]
      branch: main
    secrets: [ mail, codeberg_token ]
    environment:
      - OUTPUT=target/doc
    commands:
      # co_widgets doc
      - cargo doc --no-deps -p co_widgets
      # slint_orbclient doc
      - cargo doc --no-deps -p slint_orbclient
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b main https://$CODEBERG_TOKEN@codeberg.org/flovansl/pages.git /tmp/pages/
      # Copy build step output to repository folder
      - mkdir /tmp/pages/snapshots/doc/
      - cp -ar $OUTPUT/* /tmp/pages/snapshots/doc/
     
      # Commit and push all static files with pipeline started timestamp
      - cd /tmp/pages/
      - git add .
      - git commit -m "Woodpecker CI ${CI_BUILD_CREATED} [CI SKIP]"
      - git push
  deploy_wasm:
    image: rust
    when:
      event: [push]
      branch: main
    secrets: [ mail, codeberg_token ]
    environment:
      - OUTPUT=examples/widgets
    commands:
      - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - cd $OUTPUT
      - sed -i "s/#wasm# //" Cargo.toml
      - wasm-pack build --release --target web
      # Git configuration
      - git config --global user.email $MAIL
      - git config --global user.name "Woodpecker CI"
      - git clone -b main https://$CODEBERG_TOKEN@codeberg.org/flovansl/pages.git /tmp/pages/
      # Copy build step output to repository folder
      - cp -ar pkg/* /tmp/pages/snapshots/widgets/pkg/
      - cp index.html /tmp/pages/snapshots/widgets/
     
      # Commit and push all static files with pipeline started timestamp
      - cd /tmp/pages/
      - git add .
      - git commit -m "Woodpecker CI ${CI_BUILD_CREATED} [CI SKIP]"
      - git push