// SPDX-FileCopyrightText: 2022 Florian Blasius <co-sl@tutanota.com>
// SPDX-License-Identifier: MIT

import { RoundButton } from "../widgets/round-button.slint";
import { Duration, Palette, Size, Space } from "../styling.slint";
import { MediumTitle } from "../components/label.slint";
import { Spacer } from "../layouts/spacer.slint";

export component SideBar {
    private property <bool> on-break-point: root.responsive && root.parent-width < root.break-point;

    in property <string> title;
    in property <length> parent-width;
    in property <length> break-point: 444px;
    in property <bool> responsive;
    in-out property <bool> expanded;

    width: root.on-break-point ? Size.medium + 2 * Space.medium : 160px;
    min-height: i-layout.min-height;
    horizontal-stretch: 0;

    if (!root.expanded) : Rectangle {
        y:0;
        width: 100%;
        height: self.width;
        background: Palette.background-alt;

        i-open := RoundButton {
            x: Space.medium;
            y: Space.medium;
            visible: root.on-break-point;
            icon: @image-url("../assets/icons/reorder.svg");
            icon-background: Palette.background-alt;

            clicked => {
                root.expanded = !root.expanded;
            }
        }
    }

    if (root.expanded && root.on-break-point) : Rectangle {
        x:0;
        width: root.parent-width;
        height: 100%;
        background: #00000040;

        TouchArea {
            clicked => { root.expanded = false; }
        }
    }

    i-content := Rectangle {
        x: 0px;
        width: 160px;
        background: Palette.background-alt;
        clip: true;

        i-layout := VerticalLayout {
            padding-top: Space.medium;
            padding-bottom: Space.medium;
            padding-right: 2px;
            spacing: Space.medium;

            if (root.on-break-point || root.title != "") : HorizontalLayout {
                padding-left: Space.medium;
                padding-right: Space.medium;
                spacing: Space.large;
                vertical-stretch: 0;

                if (root.on-break-point) : RoundButton {
                    icon: @image-url("../assets/icons/reorder.svg");
                    icon-background: Palette.background-alt;

                    clicked => {
                        root.expanded = !root.expanded;
                    }
                }

                if (root.title != "") : MediumTitle {
                    text: root.title;
                    vertical-alignment: center;
                    horizontal-alignment: root.on-break-point ? left : center;
                }
            }

            @children
        }

        Rectangle {
            background: Palette.border;
            width: 1px;
            height: 100%;
            x: parent.width - self.width;
        }
    }

    states [
        expanded when root.expanded: {
            i-content.x: 0;

            in {
                animate i-content.x { duration: Duration.fast; }
            }
            out {
                animate i-content.x { duration: Duration.fast; }
            }
            in {
                animate i-content.x { duration: Duration.fast; }
            }
            out {
                animate i-content.x { duration: Duration.fast; }
            }
        }

        on-break-point when root.on-break-point: {
            i-content.x: - i-content.width;
        }
    ]
}