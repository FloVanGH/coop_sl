// SPDX-FileCopyrightText: 2022 Florian Blasius <co_sl@tutanota.com>
// SPDX-License-Identifier: MIT


import { FocusBorder } from "../components/focus_border.slint";

// `FocusTouchArea` is a touch area with a focus border.
export component FocusTouchArea inherits TouchArea {
    private property <bool> enter_pressed;

    // Defines the border radius of the focus border.
    in property <length> focus_border_radius: 0px;

    // If `true` the touch area is pressed or the touch area has focus and  `enter` is pressed.
    out property <bool> focus_pressed: root.pressed || root.enter_pressed;

    // If `true` the element has focus.
    out property <bool> has_focus <=> i_focus_scope.has_focus;

    forward_focus: i_focus_scope;

    i_focus_scope := FocusScope {
        x:0;
        width: 0px; // Do not react on clicks
        enabled <=> root.enabled;
        
        key-pressed(event) => {
            if((event.text == " " || event.text == "\n") && !root.enter_pressed) {
                root.enter_pressed = true;
                root.clicked();
                return accept;
            }
            return reject;
        }

        key-released(event) => {  
            if((event.text == " " || event.text == "\n") && root.enter_pressed) {
                root.enter_pressed = false;
                return accept;
            }
            return reject;
        }
    }

    if(i_focus_scope.has_focus) : FocusBorder {
        width: root.width + 4px;
        height: root.height + 4px;
        x: (parent.width - self.width) / 2;
        y: (parent.height - self.height) / 2;
        border_radius: root.focus_border_radius + 2px;
    }
}