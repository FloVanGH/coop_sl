// SPDX-FileCopyrightText: 2022 Florian Blasius <co-sl@tutanota.com>
// SPDX-License-Identifier: MIT

import { StyleMetrics } from "std-widgets.slint";

export global Settings {
    in-out property <bool> dark-color-scheme: StyleMetrics.dark-color-scheme;
}

export enum ColorVariant {
    Dark,
    Light
 }

export enum ColorTheme {
    Coop,
    Cosmic
}

export global CoopPalette {
    out property <brush> background: Settings.dark-color-scheme ? #2d2d2d: #dfdfdf;
    out property <brush> background-alt: Settings.dark-color-scheme ? #414141: #cbcbcb;
    out property <brush> foreground: Settings.dark-color-scheme ? #dfdfdf: #2d2d2d;
    out property <brush> foreground-disabled: Settings.dark-color-scheme ? #7b7b7b: #a0a0a0;
    out property <brush> surface: Settings.dark-color-scheme ? #505050: #BDBDBD;
    out property <brush> surface-disabled: Settings.dark-color-scheme ? #3d3d3d: #d2d2d2;
    out property <brush> on-surface: Settings.dark-color-scheme ? #212121: #dfdfdf;
    out property <brush> primary: accent;
    out property <brush> on-primary: on-accent;
    out property <brush> border: Settings.dark-color-scheme ? #7e7e7e: #505050;
    out property <brush> border-disabled: Settings.dark-color-scheme ? #494949: #c5c5c5;
    out property <brush> shadow: #000000;
    out property <brush> error: #EF5350;
    out property <brush> accent: Settings.dark-color-scheme ? #01fec5: #1d9bf2;
    out property <brush> on-accent: Settings.dark-color-scheme ? #212121: #dfdfdf;
}

export global CosmicPalette {
    out property <brush> background: Settings.dark-color-scheme ? #1E1E1E: #DEDEDE;
    out property <brush> background-alt: Settings.dark-color-scheme ? #292929: #E9E9E9;
    out property <brush> foreground: Settings.dark-color-scheme ? #E2E2E2: #1B1B1B;
    out property <brush> foreground-disabled: Settings.dark-color-scheme ? #808080: #7D7D7D;
    out property <brush> surface: Settings.dark-color-scheme ? #545454: #B8B8B8;
    out property <brush> surface-disabled: Settings.dark-color-scheme ? #303030: #CBCBCB;
    out property <brush> on-surface: Settings.dark-color-scheme ? #E2E2E2: #1B1B1B;
    out property <brush> primary: accent;
    out property <brush> on-primary: on-accent;
    out property <brush> border: Settings.dark-color-scheme ? #E2E2E2: #1B1B1B;
    out property <brush> border-disabled: Settings.dark-color-scheme ? #494949: #c5c5c5;
    out property <brush> shadow: #000000;
    out property <brush> error: Settings.dark-color-scheme ? #FFB5B5 : #A0252B;
    out property <brush> accent: Settings.dark-color-scheme ? #94EBEB: #00496D;
    out property <brush> on-accent: Settings.dark-color-scheme ? #000000: #FFFFFF;
}

export global Palette {
    out property <ColorTheme> current-color-theme: ColorTheme.Coop;
    out property <bool> dark-color-scheme: Settings.dark-color-scheme;
    in-out property <brush> background: CoopPalette.background;
    in-out property <brush> background-alt: CoopPalette.background-alt;
    in-out property <brush> foreground: CoopPalette.foreground;
    in-out property <brush> foreground-disabled: CoopPalette.foreground-disabled;
    in-out property <brush> surface: CoopPalette.surface;
    in-out property <brush> surface-disabled: CoopPalette.surface-disabled;
    in-out property <brush> on-surface: CoopPalette.on-surface;
    in-out property <brush> primary: CoopPalette.primary;
    in-out property <brush> on-primary: CoopPalette.on-primary;
    in-out property <brush> border: CoopPalette.border;
    in-out property <brush> border-disabled: CoopPalette.border-disabled;
    in-out property <brush> shadow: CoopPalette.shadow;
    in-out property <brush> error: CoopPalette.error;
    in-out property <brush> accent: CoopPalette.accent;
    in-out property <brush> on-accent: CoopPalette.on-accent;

    public function set-color-variant(variant: ColorVariant) {
        if (variant == ColorVariant.Light) {
            Settings.dark-color-scheme = false;
        } else {
            Settings.dark-color-scheme = true;
        }

        set-color-theme(current-color-theme);
    }

    public function set-color-theme(theme: ColorTheme) {
        current-color-theme = theme;

        if (theme == ColorTheme.Cosmic) {
            background = CosmicPalette.background;
            background-alt = CosmicPalette.background-alt;
            foreground = CosmicPalette.foreground;
            foreground-disabled = CosmicPalette.foreground-disabled;
            surface = CosmicPalette.surface;
            surface-disabled = CosmicPalette.surface-disabled;
            on-surface = CosmicPalette.on-surface;
            primary = CosmicPalette.primary;
            on-primary = CosmicPalette.on-primary;
            border = CosmicPalette.border;
            border-disabled = CosmicPalette.border-disabled;
            shadow = CosmicPalette.shadow;
            error = CosmicPalette.error;
            accent = CosmicPalette.accent;
            on-accent = CosmicPalette.on-accent;

            return;
        }

        background = CoopPalette.background;
        background-alt = CoopPalette.background-alt;
        foreground = CoopPalette.foreground;
        foreground-disabled = CoopPalette.foreground-disabled;
        surface = CoopPalette.surface;
        surface-disabled = CoopPalette.surface-disabled;
        on-surface = CoopPalette.on-surface;
        primary = CoopPalette.primary;
        on-primary = CoopPalette.on-primary;
        border = CoopPalette.border;
        border-disabled = CoopPalette.border-disabled;
        shadow = CoopPalette.shadow;
        error = CoopPalette.error;
        accent = CoopPalette.accent;
        on-accent = CoopPalette.on-accent;
    }
}