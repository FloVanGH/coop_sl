// SPDX-FileCopyrightText: 2022 Florian Blasius <co-sl@tutanota.com>
// SPDX-License-Identifier: MIT

import { Duration, Icography, Radius, Palette, Size, State, Space, Icons } from "../styling.slint";
import { SmallLabel } from "../components/label.slint";
import { CheckableBase } from "../_internal/base-widgets.slint";

export component CheckBox inherits Rectangle {
    in property <string> text <=> i-label.text;
    in property <bool> enabled <=> i-base.enabled;
    out property <bool> has-focus: i-base.has-focus;
    in-out property <bool> checked <=> i-base.checked;

    callback toggled(/* checked */ bool);

    min-width: i-layout.min-width;
    min-height: max(Size.extra-small, i-layout.min-height);
    horizontal-stretch: 0;
    vertical-stretch: 0;
    accessible-label <=> i-label.text;
    accessible-checkable: true;
    accessible-checked <=> root.checked;
    accessible-role: checkbox;
    forward-focus: i-base;

    states [
        disabled-checked when !root.enabled && root.checked: {
            i-background.background: Palette.surface-disabled;
            i-label.color: Palette.foreground-disabled;
            i-background.border-width: 0px;
            i-icon.opacity: 1;
        }
        disabled when !root.enabled: {
            i-background.border-color: Palette.border-disabled;
            i-label.color: Palette.foreground-disabled;
        }
        pressed-checked when i-base.focus-pressed && root.checked: {
            i-background.background: Palette.primary.darker(State.pressed);
            i-icon.colorize: Palette.on-primary.darker(State.pressed);
            i-background.border-width: 0px;
            i-icon.opacity: 1;
        }
        hover-checked when i-base.has-hover && root.checked: {
            i-background.background: Palette.primary.darker(State.hover);
            i-icon.colorize: Palette.on-primary.darker(State.hover);
            i-background.border-width: 0px;
            i-icon.opacity: 1;
        }
        pressed when i-base.focus-pressed: {
            i-background. background: Palette.background.darker(State.pressed);
            root.border-color: Palette.border.darker(State.pressed);
            i-icon.colorize: Palette.foreground.darker(State.pressed);
        }
        hover when i-base.has-hover: {
            i-background.background: Palette.background.darker(State.hover);
            root.border-color: Palette.border.darker(State.hover);
            i-icon.colorize: Palette.foreground.darker(State.hover);
        }
        checked when i-base.checked: {
            i-background.background: Palette.primary;
            i-background.border-width: 0px;
            i-icon.opacity: 1;
        }
    ]

    i-base := CheckableBase {
        toggled(checked) => {
            root.toggled(checked);
        }

        focus-border-radius: Radius.extra-small;

        i-layout := HorizontalLayout {
            spacing: Space.small;

            VerticalLayout {
                alignment: center;

                i-background := Rectangle {
                    property <length> spacing: root.text == "" ? 0px: Space.small;

                    width: Size.extra-small;
                    height: Size.extra-small;
                    border-radius: Radius.extra-small;
                    border-width: 1px;
                    border-color: Palette.border;
                    background: Palette.background;

                    animate background { duration: Duration.medium; easing: ease-in-out; }

                    i-icon := Image {
                        colorize: Palette.on-primary;
                        source: Icons.check;
                        opacity: 0;
                        visible: root.checked;
                        width: Icography.small;

                        animate colorize, opacity { duration: Duration.fast; }
                    }
                }
            }

            i-label := SmallLabel {
                horizontal-alignment: left;
                vertical-alignment: center;
                vertical-stretch: 1;
            }
        }
    }
}